public List<PL_CUSTOMER_CLUSTER> GetCustomer(int ID, string MONTH, int YEAR)
		{
			List<PL_CUSTOMER_CLUSTER> items = new List<PL_CUSTOMER_CLUSTER>();
			using (var conn = new SqlConnection(connString))
			{
				Message = "";
				try
				{
					conn.Open();
					SqlCommand command = new SqlCommand("SELECT DISTINCT [DATE_STAMP],[MONTH],[YEAR],[IDREFPELANGGAN],[NAMA],[CLUSTER_NUM] FROM [SIPG].[dbo].[VW_AA_DATAPELANGGAN_V1]  where CLUSTER_NUM = @ID and MONTH = @MONTH and YEAR = @YEAR AND NAMA NOT LIKE '%CENTROID%' ORDER BY NAMA DESC", conn);
					command.Parameters.AddWithValue("@ID", ID);
					command.Parameters.AddWithValue("@MONTH", MONTH);
					command.Parameters.AddWithValue("@YEAR", YEAR);
					SqlDataReader reader = command.ExecuteReader();
					PL_CUSTOMER_CLUSTER item = new PL_CUSTOMER_CLUSTER();
					while (reader.Read())
					{
						item = new PL_CUSTOMER_CLUSTER();
						if (reader[0] != DBNull.Value) { item.DATE_STAMP = Convert.ToDateTime(reader[0]); }
						if (reader[1] != DBNull.Value) { item.MONTH = Convert.ToString(reader[1]); }
						if (reader[2] != DBNull.Value) { item.YEAR = Convert.ToInt32(reader[2]); }
						if (reader[3] != DBNull.Value) { item.IDREFPELANGGAN = Convert.ToString(reader[3]); }
						if (reader[4] != DBNull.Value) { item.NAMA = Convert.ToString(reader[4]); }
						if (reader[5] != DBNull.Value) { item.CLUSTER_NUM = Convert.ToInt32(reader[5]); }
						items.Add(item);
					}
				}
				catch (Exception ex)
				{
					Message = ex.Message;
				}
			}
			return items;
		}
		
		public List<PL_CUSTOMER_CLUSTER> GetCustomerData(int ID, string MONTH, int YEAR)
		{
			List<PL_CUSTOMER_CLUSTER> items = new List<PL_CUSTOMER_CLUSTER>();
			using (var conn = new SqlConnection(connString))
			{
				Message = "";
				try
				{
					conn.Open();
					SqlCommand command = new SqlCommand("SELECT [DATE_STAMP],[MONTH],[YEAR],[IDREFPELANGGAN],COALESCE(NAMA, [IDREFPELANGGAN]) As NAMA,[CLUSTER_NUM], [HOUR_NUM], [FDVC_NORMALIZED] FROM [SIPG].[dbo].[VW_AA_DATAPELANGGAN_V1]  where CLUSTER_NUM = @ID and MONTH = @MONTH and YEAR = @YEAR ORDER BY DATE_STAMP, IDREFPELANGGAN, CLUSTER_NUM, HOUR_NUM", conn);
					command.Parameters.AddWithValue("@ID", ID);
					command.Parameters.AddWithValue("@MONTH", MONTH);
					command.Parameters.AddWithValue("@YEAR", YEAR);
					SqlDataReader reader = command.ExecuteReader();
					PL_CUSTOMER_CLUSTER item = new PL_CUSTOMER_CLUSTER();
					while (reader.Read())
					{
						item = new PL_CUSTOMER_CLUSTER();
						if (reader[0] != DBNull.Value) { item.DATE_STAMP = Convert.ToDateTime(reader[0]); }
						if (reader[1] != DBNull.Value) { item.MONTH = Convert.ToString(reader[1]); }
						if (reader[2] != DBNull.Value) { item.YEAR = Convert.ToInt32(reader[2]); }
						if (reader[3] != DBNull.Value) { item.IDREFPELANGGAN = Convert.ToString(reader[3]); }
						if (reader[4] != DBNull.Value) { item.NAMA = Convert.ToString(reader[4]); }
						if (reader[5] != DBNull.Value) { item.CLUSTER_NUM = Convert.ToInt32(reader[5]); }
						if (reader[6] != DBNull.Value) { item.HOUR_NUM = Convert.ToInt32(reader[6]); }
						if (reader[7] != DBNull.Value) { item.FDVC_NORMALIZED = Convert.ToDouble(reader[7]); }

						items.Add(item);
					}
				}
				catch (Exception ex)
				{
					Message = ex.Message;
				}
			}
			return items;
		}
